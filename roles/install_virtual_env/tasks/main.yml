---
- name: Install requirements
  apt: pkg={{ item }} state=present
  with_items:
    - git
    - python-dev
    - python-apt
    - python-setuptools
    - python-pip
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
  sudo: yes

- name: Install
  git: repo=https://github.com/yyuu/pyenv.git dest={{ pyenv_root }}


- name: Install virtualenv
  git: repo=https://github.com/yyuu/{{ item }}.git dest={{ pyenv_root }}/plugins/{{ item }}
  with_items:
    - pyenv-virtualenv
    - pyenv-virtualenvwrapper
  when: pyenv_virtualenv


- name: Install versions
  command: creates={{ pyenv_root }}/versions/{{ item }} {{ pyenv_root }}/bin/pyenv install {{ item }}
  with_items: "{{ pyenv_versions }}"

- include: versions.yml
  versions: "{{ pyenv_default_versions }}"
  dest: "{{ pyenv_root }}/version"

- include: versions.yml
  versions: "{{ pyenv_project_versions }}"
  dest: "{{ pyenv_project_root }}/.python-version"

- name: Add the lines to bashrc
  lineinfile: >
    dest={{ pyenv_runcom }}
    state=present
    create=yes
    line="{{ item }}"
  with_items:
    - if which pyenv > /dev/null; then
    - "    export PYENV_ROOT=\\\"$HOME/.pyenv\\\""
    - "    export PATH=\\\"$PYENV_ROOT/bin:$PATH\\\""
    - "    eval \\\"$(pyenv init -)\\\""
    - "fi # pyenv"

- name: Add virtualenv to run commands
  lineinfile: >
    dest={{ pyenv_runcom }}
    state=present
    create=yes
    insertbefore="fi # pyenv"
    line="    pyenv virtualenvwrapper_lazy"
  when: pyenv_virtualenv

- name: Configure virtualenvwrapper
  lineinfile: >
    dest={{ pyenv_runcom }}
    state=present
    create=yes
    line="{{ item }}"
  with_items:
    - export WORKON_HOME=\"$HOME/.virtualenvs\"
    - export PROJECT_HOME=\"$HOME/development\"
  when: pyenv_virtualenv and pyenv_runcom

- name: install environment
  shell: "{{ pyenv_root }}/bin/pyenv init -"
  register: pyenvinit

- name: ensure file exists
  copy:
    content: ""
    dest: /etc/pyenvinit.sh
    force: no
    group: root
    owner: root
    mode: 0755
  sudo: yes

- name: write in file
  shell: echo {{ pyenvinit.stdout }} > /etc/pyenvinit.sh
  sudo: yes
  register: pathtest

- set_fact: 
    path: '{{ pathtest.stdout }}'

- name: execute the file to initiallize environment
  shell: sh /etc/pyenvinit.sh
  sudo: yes

- name: install virtual environment 
  shell: "{{ pyenv_root }}/bin/pyenv virtualenv-init -"
  register: virtualenvinit

- name: ensure file exists
  copy:
    content: ""
    dest: /etc/virtualenvinit.sh
    force: no
    group: root
    owner: root
    mode: 0755
  sudo: yes

- name: write in file
  shell: echo {{ virtualenvinit.stdout }} > /etc/virtualenvinit.sh
  sudo: yes
  register: pathnew

- shell: echo $PATH
  register: var

- shell: echo Path is $PATH
  environment:
    PATH : "'/home/vagrant/.pyenv/plugins/pyenv-virtualenv/shims:/home/vagrant/.pyenv/shims':{{ var.stdout }}"

- name: execute the file to initiallize virtual environment
  shell: sh /etc/virtualenvinit.sh
  sudo: yes
  environment:
    PATH : "'/home/vagrant/.pyenv/plugins/pyenv-virtualenv/shims:/home/vagrant/.pyenv/shims':{{ var.stdout }}"

- shell: pyenv virtualenvwrapper
  environment:
    PATH : "'/home/vagrant/.pyenv/bin:/home/vagrant/.pyenv/plugins/pyenv-virtualenv/shims:/home/vagrant/.pyenv/shims':{{ var.stdout }}"

- shell: echo $PATH
  environment: 
    WORKON_HOME: /home/vagrant/.virtualenvs
    PROJECT_HOME: /home/vagrant/development

